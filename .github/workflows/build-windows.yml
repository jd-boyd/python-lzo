name: Build wheels for Windows x64

on:
  workflow_dispatch:
    inputs:
      custom_ref:
        description: 'custom ref/tag'
        required: false
      do_release:
        description: 'Creating release from artifacts: type "y" to enable'
        required: false
jobs:
  build-w64:
    runs-on:
      - windows-latest
      #x- windows-latest-arm64
    defaults:
      run:
        shell: cmd
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    name: ${{ matrix.python-version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Run cmake
        working-directory: .\lzo-2.10
        run: |
          md build
          cd build
          cmake ..
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2
        # with:
        #   msbuild-architecture: x64
      - name: Build lzo static lib
        working-directory: .\lzo-2.10\build
        run: msbuild lzo_static_lib.vcxproj -p:Configuration=Release;Platform=x64;OutDir=..\
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
#          architecture: x64
      - name: Build wheel
        env:
          LZO_DIR: .\lzo-2.10
        run: |
          python -m pip install -U pip wheel build
          python -m build
          ls -l dist
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-py${{ matrix.python-version }}
          path: dist\*.whl
          overwrite: true
          if-no-files-found: error

  release:
    if: ${{ github.event.inputs.do_release == 'y' && github.event.inputs.custom_ref != '' }}
    needs: [build-w64]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          merge-multiple: true

      - name: List all files
        run: ls -R ./artifacts

      - name: do release
        run: |
          gh release create '${{ github.event.inputs.custom_ref}}' \
            -t '${{ github.event.inputs.custom_ref}}' \
            --title "${{ github.event.repository.name }}-${{ github.event.inputs.custom_ref}}" \
            --target '${{ github.ref_name }}' \
            --latest=true \
            --generate-notes \
            --repo ${GITHUB_REPOSITORY}
          gh release upload '${{ github.event.inputs.custom_ref}}' --repo ${GITHUB_REPOSITORY} --clobber \
            ./artifacts/*
